@page "/customers/create/"

@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Add New Customer:</h3>
<hr />
<br />

<EditForm Model="@this.newCustomer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Tax ID:</label>
        <div>
            <InputText class="form-control" @bind-Value="@newCustomer.TaxId" />
            <ValidationMessage For="@(() => newCustomer.TaxId)" />

        </div>
    </div>
    <div class="form-group">
        <label>Address:</label>
        <div>
            <InputText class="form-control" @bind-Value="@newCustomer.Address" />
            <ValidationMessage For="@(() => newCustomer.Address)" />

        </div>
    </div>
    <div class="form-group">
        <label>Contact Number:</label>
        <div>
            <InputText class="form-control" @bind-Value="@newCustomer.ContactNumber" />
            <ValidationMessage For="@(() => newCustomer.ContactNumber)" />

        </div>
    </div>
    <div class="form-group">
        <label>Email Address:</label>
        <div>
            <InputText class="form-control" @bind-Value="@newCustomer.EmailAddress" />
            <ValidationMessage For="@(() => newCustomer.EmailAddress)" />

        </div>
    </div>
    <button type="submit" class="btn btn-primary btn-block">Add Customer</button>
</EditForm>

@code {
    Customer newCustomer = new Customer();

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, newCustomer);
        _navManager.NavigateTo("/customers/");
    }
}
